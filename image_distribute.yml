---
# ansible requirements:
#   containers.podman
# python requirements:
#   docker
- hosts: automationcontroller,execution_nodes
  gather_facts: false
  max_fail_percentage: 0
  vars:
    container_image: quay.io/ansible/awx-ee:latest
    archive_filename: awx_ee_image.tar
  tasks:
    - name: Local action task group
      block:
        - name: Determine if archive already exists
          stat:
            path: "{{ archive_filename }}"
          register: existing_archive

        - name: Archive AWX image from the host machine
          containers.podman.podman_save:   # community.docker.docker_image
            image: "{{ container_image }}"
            dest: "{{ archive_filename }}"
          when: not (existing_archive.stat.exists is defined and existing_archive.stat.exists)
      delegate_to: localhost
      run_once: true

    - name: Remote task group
      block:
        - name: Remove existing image
          containers.podman.podman_image:
            name: "{{ container_image }}"
            state: absent
          tags:
            - never
            - delete

        - name: Copy archive into container
          ansible.builtin.copy:
            src: "{{ archive_filename }}"
            dest: "/var/lib/awx/{{ archive_filename }}"
            force: true

        - name: Load awx_devel image from tar file inside of container
          containers.podman.podman_load:  # community.docker.docker_image_load
            input: "/var/lib/awx/{{ archive_filename }}"

        - name: Delete image to save space
          file:
            path: "/var/lib/awx/{{ archive_filename }}"
            state: absent

        - name: Get the images on the system, double-check your work
          command: podman images
          register: result
          tags: list

        - name: Show the images on the system, double-check this is what you wanted
          debug:
            var: result.stdout
          tags: list

      become: true
      become_user: awx
      when: node_type is not defined or node_type != 'hop'
